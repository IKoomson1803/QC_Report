@model Deluxe.QCReport.Web.Models.HomeVM




<div class="bs-callout bs-callout-warning">

    <div class="row">
        <div class="col-xs-3">
            <b style="font-size:14px;">@string.Format("{0} - {1}: History", Model.History_VM.Qcnum, Model.History_VM.subQcnum)</b>
        </div>


        @if (Model.SecurityLevel >= 1)
        {

            <div class="col-xs-6 text-center">

                <button class="btn btn-xs btn-primary CRUDButton" id="btnSave">Save</button>
            </div>

        }


    </div>

    <hr />

    <div class="row" style="height:500px; overflow-y:auto;overflow-x:hidden;">
        @using (Html.BeginForm("SaveHistoryDetails", "Job", FormMethod.Post, new { @class = "form-horizontal form-group-sm", @style = "margin-top: 20px;", @id = "form_jobdetails" }))
        {

            @Html.HiddenFor(m => m.History_VM.Qcnum)
            @Html.HiddenFor(m => m.History_VM.subQcnum)

            <h6 style="font-weight:bold;color:brown">QC Operator</h6>

            <div class="row">
                <div class="col-sm-1 text-right">
                    <label class="control-label">QC Operator:</label>
                </div>



                <div class="col-sm-5 form-group">

                    @*@Model.History_VM.FullName
                        @Html.HiddenFor(m => m.History_VM.OperatorId)*@

                    @Html.DropDownListFor(m => m.History_VM.OperatorId, new SelectList(Model.OperatorList, "key", "value"), "-- Select QC Operator --", new { @class = "form-control SearchableDropdown" })

                </div>

                <div class="col-sm-1 text-right">
                    <label class="control-label">QC Date:</label>
                </div>

                <div class="col-sm-5 form-group">

                    @*@Model.History_VM.QC_Date
                        @Html.HiddenFor(m => m.History_VM.QC_Date)*@


                    <div class="input-group">
                        @Html.TextBoxFor(m => m.History_VM.QC_Date, new { @class = "form-control", @style = "width:150px" })
                        <span class="input-group-btn float-left">
                            <button class="btn btn-xs btn-default" type="button" id="btn_qcDate"><span class="glyphicon glyphicon-calendar" aria-hidden="true" onclick="setDatePicker('History_VM_QC_Date')"></span></button>
                        </span>
                    </div>


                </div>

            </div>

            <div class="row">

                <div class="col-sm-1 text-right">
                    <label class="control-label">QC OF:</label>
                </div>

                <div class="col-sm-8 form-group">

                    @Html.TextBoxFor(m => m.History_VM.Operator_Activity, new { @class = "form-control", maxlength = "150" })
                </div>

            </div>

            <div class="row">
                <div class="col-sm-1 text-right">

                    <label class="control-label">Revised By:</label>
                </div>

                <div class="col-sm-5 form-group">

                    @Html.DropDownListFor(m => m.History_VM.Revised_By, new SelectList(Model.RevisedByList, "value", "value"), "-- Select Revised By --", new { @class = "form-control  SearchableDropdown" })
                </div>

                <div class="col-sm-1 text-right">

                    <label class="control-label">Revised Date:</label>
                </div>

                <div class="col-sm-5 form-group">


                    <div class="input-group">
                        @Html.TextBoxFor(m => m.History_VM.Revised_Date, new { @class = "form-control", @style = "width:150px" })
                        <span class="input-group-btn float-left">
                            <button class="btn btn-xs btn-default" type="button" id="btn_revisedDate"><span class="glyphicon glyphicon-calendar" aria-hidden="true" onclick="setDatePicker('History_VM_Revised_Date')"></span></button>
                        </span>
                    </div>

                    @*@Model.History_VM.Revised_Date

                        @Html.HiddenFor(m => m.History_VM.Revised_Date)*@

                    @*@if (Model.History_VM.Revised_Date.HasValue)
                        {
                           @Model.History_VM.Revised_Date.Value.ToString("dd/MM/yyyy");
                        }*@

                </div>
            </div>

            <div class="row">

                <div class="col-sm-1 text-right">

                    <label class="control-label">MFR / QC Room:</label>
                </div>

                <div class="col-sm-5 form-group">

                    @Html.DropDownListFor(m => m.History_VM.Bay_Num, new SelectList(Model.QCRoomList, "value", "value"), "", new { @class = "form-control", @style = "width:150px;" })
                </div>

                <div class="col-sm-1 text-right">

                    <label class="control-label">QC Player:</label>
                </div>

                <div class="col-sm-5 form-group">

                    @Html.TextBoxFor(m => m.History_VM.QC_VTR, new { @class = "form-control", @style = "width:150px", maxlength = "20" })
                </div>


            </div>

            <div class="row">

                <div class="col-sm-1 text-right">

                    <label class="control-label">&nbsp;</label>
                </div>

                <div class="col-sm-5 form-group">

                    <button class="btn btn-xs btn-danger reset" type="button" id="btnReset_1" data-id="1">Reset</button>
                </div>

            </div>

            <hr />


            <h6 style="font-weight:bold;color:brown">QC Operator</h6>
            <div class="row">
                <div class="col-sm-1 text-right">
                    <label class="control-label">QC Operator:</label>
                </div>

                <div class="col-sm-5 form-group">
                    @Html.DropDownListFor(m => m.History_VM.OperatorId_2, new SelectList(Model.OperatorList, "key", "value"), "-- Select QC Operator --", new { @class = "form-control SearchableDropdown" })
                </div>

                <div class="col-sm-1 text-right">
                    <label class="control-label">QC Date:</label>
                </div>

                <div class="col-sm-5 form-group">
                    <div class="input-group">
                        @Html.TextBoxFor(m => m.History_VM.QC_Date_2, new { @class = "form-control", @style = "width:150px" })
                        <span class="input-group-btn float-left">
                            <button class="btn btn-xs btn-default" type="button" id="btn_qc2Date"><span class="glyphicon glyphicon-calendar" aria-hidden="true" onclick="setDatePicker('History_VM_QC_Date_2')"></span></button>
                        </span>
                    </div>
                </div>


            </div>

            <div class="row">

                <div class="col-sm-1 text-right">
                    <label class="control-label">QC OF:</label>
                </div>

                <div class="col-sm-8 form-group">

                    @Html.TextBoxFor(m => m.History_VM.Operator_2_Activity, new { @class = "form-control", maxlength = "150" })
                </div>

            </div>

            <div class="row">
                <div class="col-sm-1 text-right">
                    <label class="control-label">Revised By:</label>
                </div>

                <div class="col-sm-5 form-group">

                    @Html.DropDownListFor(m => m.History_VM.Revised_By_2, new SelectList(Model.RevisedByList, "value", "value"), "-- Select Revised By --", new { @class = "form-control SearchableDropdown" })
                </div>

                <div class="col-sm-1 text-right">

                    <label class="control-label">Revised Date:</label>
                </div>

                <div class="col-sm-5 form-group">

                    <div class="input-group">
                        @Html.TextBoxFor(m => m.History_VM.Revised_Date_2, new { @class = "form-control", @style = "width:150px" })
                        <span class="input-group-btn float-left">
                            <button class="btn btn-xs btn-default" type="button" id="btn_revisedDate_2"><span class="glyphicon glyphicon-calendar" aria-hidden="true" onclick="setDatePicker('History_VM_Revised_Date_2')"></span></button>
                        </span>
                    </div>

                    @*@Model.History_VM.Revised_Date_2
                                @Html.HiddenFor(m => m.History_VM.Revised_Date_2)

                                @if (Model.History_VM.Revised_Date_2.HasValue)
                         {
                            @Model.History_VM.Revised_Date_2.Value.ToString("dd/MM/yyyy");
                        }*@

                </div>
            </div>

            <div class="row">

                <div class="col-sm-1 text-right">

                    <label class="control-label">MFR / QC Room:</label>
                </div>

                <div class="col-sm-5 form-group">

                    @Html.DropDownListFor(m => m.History_VM.Bay_Num_2, new SelectList(Model.QCRoomList, "value", "value"), "", new { @class = "form-control", @style = "width:150px;" })
                </div>

                <div class="col-sm-1 text-right">

                    <label class="control-label">QC Player:</label>
                </div>

                <div class="col-sm-5 form-group">

                    @Html.TextBoxFor(m => m.History_VM.QC_VTR_2, new { @class = "form-control", @style = "width:150px", maxlength = "20" })
                </div>


            </div>

            <div class="row">

                <div class="col-sm-1 text-right">

                    <label class="control-label">&nbsp;</label>
                </div>

                <div class="col-sm-5 form-group">

                    <button class="btn btn-xs btn-danger reset" type="button" id="btnReset_2" data-id="2">Reset</button>
                </div>

            </div>


        }




    </div>



</div>

<!-- Modal -->
<div class="modal fade" id="resetPromptModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">

            <div class="modal-body" style="font-size:14px;font-weight:bold;">

            </div>
            <div class="modal-footer">
                <div class="btn-group" role="group">
                    <button type="button" class="btn btn-sm btn-default" data-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-sm btn-danger" id="btnConfirm">Reset</button>
                </div>
            </div>
        </div>
    </div>
</div>


<script>

    var resetId;

function setActiveButton() {
    $(".subMenuOnClick").removeClass("subMenuOnClick")
    $("#lnkESIQcHistory").addClass("subMenuOnClick");
    }


    function setDatePicker(element) {

        $('#' + element).datepicker({
             inline: true,
            showAnim: 'slideDown',
            dateFormat: 'dd/mm/yy ',
            onSelect: function (date) {
                var d = new Date();
                 var localtime = d.toLocaleTimeString([], {
                    hourCycle: 'h23',
                    hour: '2-digit',
                    minute: '2-digit',
                    second: '2-digit'
                    });
                $('#' + element).val(date + localtime)
            }
        });

        $('#' + element).focus();
    }

    function resetQCOperator_1_Details() {
        /***********Reset QC Operator #1 DDL*****************************************/
        $('#History_VM_OperatorId option:selected').each(function () {
            $(this).prop('selected', false);
        })
        $('#History_VM_OperatorId').multiselect('rebuild');
        $('#History_VM_OperatorId').multiselect('refresh');
        /**************************************************************************/

        $('#History_VM_QC_Date').val('');


        $('#History_VM_Operator_Activity').val('');

        /***********Reset Revised By #1 DDL*****************************************/
        $('#History_VM_Revised_By option:selected').each(function () {
            $(this).prop('selected', false);
        })
        $('#History_VM_Revised_By').multiselect('rebuild');
        $('#History_VM_Revised_By').multiselect('refresh');
        /**************************************************************************/

        $('#History_VM_Revised_Date').val('');
        $('#History_VM_Bay_Num').val('');
        $('#History_VM_QC_VTR').val('');
    }

    function resetQCOperator_2_Details() {

        /***********Reset QC Operator #2 DDL*****************************************/
        $('#History_VM_OperatorId_2 option:selected').each(function () {
            $(this).prop('selected', false);
        })
        $('#History_VM_OperatorId_2').multiselect('rebuild');
        $('#History_VM_OperatorId_2').multiselect('refresh');
        /**************************************************************************/

        $('#History_VM_QC_Date_2').val('');
        $('#History_VM_Operator_2_Activity').val('');

        /***********Reset Revised By #2 DDL*****************************************/
        $('#History_VM_Revised_By_2 option:selected').each(function () {
            $(this).prop('selected', false);
        })
        $('#History_VM_Revised_By_2').multiselect('rebuild');
        $('#History_VM_Revised_By_2').multiselect('refresh');
        /**************************************************************************/

        $('#History_VM_Revised_Date_2').val('');
        $('#History_VM_Bay_Num_2').val('');
        $('#History_VM_QC_VTR_2').val('');
    }

    function setDatePicker(element) {

        $('#' + element).datepicker({
            inline: true,
            showAnim: 'slideDown',
            dateFormat: 'dd/mm/yy ',
            onSelect: function (date) {
                var d = new Date();
                var localtime = d.toLocaleTimeString([], {
                    hourCycle: 'h23',
                    hour: '2-digit',
                    minute: '2-digit',
                    second: '2-digit'
                });
                $('#' + element).val(date + localtime)
            }
        });

        $('#' + element).focus();
    }


  function initializeDatePicker() {

      // setup date picker
      // setup date picker
      var d = new Date();
      //var localtime = d.toLocaleTimeString('en-GB');

      //var hours = d.getHours().toString();
      //var minutes = d.getMinutes().toString();
      //var seconds = d.getSeconds().toString();
      //var localtime = hours + ':' + minutes + ':' + seconds;

      var localtime = d.toLocaleTimeString([], {
          hourCycle: 'h23',
          hour: '2-digit',
          minute: '2-digit',
          second: '2-digit'
      });

      var datePickerSettings = {
          inline: true, showAnim: 'slideDown', dateFormat: 'dd/mm/yy ' + localtime
      };

         $('#@Html.IdFor(m => m.History_VM.Revised_Date)').datepicker(datePickerSettings);
        $("#btn_revisedDate").on('click', function () {
            $('#@Html.IdFor(m => m.History_VM.Revised_Date)').focus();
        });

        $('#@Html.IdFor(m => m.History_VM.Revised_Date_2)').datepicker(datePickerSettings);
        $("#btn_revisedDate_2").on('click', function () {
            $('#@Html.IdFor(m => m.History_VM.Revised_Date_2)').focus();
        });

          $('#@Html.IdFor(m => m.History_VM.QC_Date)').datepicker(datePickerSettings);
        $("#btn_qcDate").on('click', function () {
            $('#@Html.IdFor(m => m.History_VM.QC_Date)').focus();
        });

         $('#@Html.IdFor(m => m.History_VM.QC_Date_2)').datepicker(datePickerSettings);
        $("#btn_qc2Date").on('click', function () {
            $('#@Html.IdFor(m => m.History_VM.QC_Date_2)').focus();
        });
    }

 $(function () {
    $(function () {


        setActiveButton();
        initializeMultiSelectChecboxList();
        //initializeDatePicker();  // Use setDatePicker(element) instead

        $('#resetPromptModal').on('shown.bs.modal', function () {
            var modal = $(this);
            modal.find('.modal-body').text("Are you sure you want to reset this QC Operator's details?");

        });

        $('.reset').on("click", function () {
            resetId = $(this).data('id');
            $('#resetPromptModal').modal('show');
        });

        $('#btnConfirm').on("click", function () {

            $('#resetPromptModal').modal('hide');

            if (resetId == '1') {
                resetQCOperator_1_Details();
            }
            else if (resetId == '2') {
                resetQCOperator_2_Details();
            }
        });



        $('#btnSave').on("click", function () {

            //if ($('#History_VM_OperatorId').val() == '') {
            //    alert('Please set the original QC Operator and continue... ')
            //    return;
            //}

           // //$('.cssload-preloader').fadeIn();
            var myModel = $('#form_jobdetails').serializeObject();

            $.post('/Job/SaveHistoryDetails', { model: myModel }).done(function (data) {

                if (data.success == true) {
                   // Msg.success(data.msg, 2 * 1000);

                    var qcno = $('#currentQCNumber').val();
                    var rno = $('#currentRevNumber').val();

                    //  $("#myDiv").load("/Job/HistoryDetails?qcnum=qcno&revnum=rno")

                    $("#divContent").load("/Job/HistoryDetails", { qcnum: qcno, revnum: rno })
                }
                else {
                    Msg.error(data.msg, 5 * 1000);
                }
            })
            .fail(function (xdata) {

                Msg.error('Error occured! <b>Status:</b> ' + xdata.status + ' <b>Error Message:</b> ' + xdata.statusText, 5 * 1000);
            })
            .always(function () {

                $('.cssload-preloader').hide();
            });
        });
    });

 });


</script>