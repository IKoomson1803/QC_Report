@model Deluxe.QCReport.Web.Models.HomeVM

@{
    var gradelist = Model.FinalGradesList;
}

<div class="bs-callout bs-callout-warning">

    @*<script src="~/Scripts/NicEdit/nicEdit-latest.js" type="text/javascript"></script>
        <script type="text/javascript">bkLib.onDomLoaded(nicEditors.allTextAreas);</script>*@




    <div class="row">
        <div class="col-xs-3">
            <b style="font-size:14px;">@string.Format("{0} - {1}: Final", Model.Final_VM.Qcnum, Model.Final_VM.subQcnum)</b>
        </div>


        @if (Model.SecurityLevel >= 1)
        {

            <div class="col-xs-6 text-center">

                <button class="btn btn-xs btn-primary CRUDButton" id="btnSave">Save</button>
            </div>

        }


    </div>

    @*<div class="row" style="height:500px; overflow-y:auto;overflow-x:hidden;">*@

    @using (Html.BeginForm("SaveFinalDetails", "Job", FormMethod.Post, new { @class = "form-horizontal form-group-sm", @style = "margin-top: 20px;", @id = "form_jobdetails" }))
    {
        @Html.HiddenFor(m => m.Final_VM.Qcnum);
        @Html.HiddenFor(m => m.Final_VM.subQcnum);


        <div class="bs-callout bs-callout-default">

            <div class="row">
                <div class="col-sm-1 text-right" style="margin-left:5px">

                    <label class="control-label">Status:</label>
                </div>

                <div class="col-sm-1 form-group">

                    @Html.DropDownListFor(m => m.Final_VM.EvalStatus, new SelectList(Model.EvalStatusList, "value", "value"), "Please Select", new { @id = "ddlStatus", @class = "form-control", @style = "width:130px;font-size:11px !important;" })
                </div>



                <div class="col-sm-9 col-sm-offset-1">

                    @*<span style="display:inline-block;margin-bottom:10px;">
                            <b style="font-size:12px;">Grade:</b>
                        </span>*@

                    @*<div class="bs-callout bs-callout-default" style="margin:0; padding:15px 15px 0 15px;">*@

                    <div class="row">
                        <div class="col-sm-1">
                            <label class="control-label"> Grade:</label>
                        </div>

                        <div class="col-sm-10">
                            <div class="row" style="border-style:solid;height:40px;margin-top:-10px;width:90%">


                                <div class="col-sm-2" style="margin-top:8px;">
                                    <label class="control-label">Overall:</label>
                                </div>
                                <div class="col-sm-2 form-group" style="margin-top:8px;">
                                    @Html.DropDownListFor(m => m.Final_VM.GradeOverall, new SelectList(Model.FinalGradesList, "key", "value"), new { @class = "form-control", @style = "width:40px" })
                                </div>


                                <div class="col-sm-2" style="margin-top:8px;">
                                    <label class="control-label">Video:</label>
                                </div>

                                <div class="col-sm-2 form-group" style="margin-top:8px;">
                                    @Html.DropDownListFor(m => m.Final_VM.GradeVideo, new SelectList(Model.FinalGradesList, "key", "value"), new { @class = "form-control", @style = "width:40px" })
                                </div>

                                <div class="col-sm-2" style="margin-top:8px;">

                                    <label class="control-label">Audio:</label>
                                </div>
                                <div class="col-sm-2 form-group" style="margin-top:8px;">
                                    @Html.DropDownListFor(m => m.Final_VM.GradeAudio, new SelectList(Model.FinalGradesList, "key", "value"), new { @class = "form-control", @style = "width:40px" })
                                </div>


                            </div>
                        </div>

                    </div>


                    @*</div>*@


                </div>
            </div>

            <div class="row" style="margin-top:20px;">
                <div class="col-sm-1 text-right">   </div>

                <div class="col-sm-10 form-group">
                    <label class="control-label"><br />Overall Comments:</label>
                    <div style="white-space: pre-line">@Html.TextAreaFor(m => m.Final_VM.OverallComments, 16, 100, new { @class = "form-control", @style= "padding: 100px;" })</div>
                </div>

            </div>

            <div class="row" style="margin-top:20px;">

                <div class="col-sm-10 form-group">
                    &nbsp;
                </div>

            </div>

            <div class="row" style="margin-top:20px;">

                <div class="col-sm-1 text-right"></div>

                <div class="col-sm-10 form-group">
                    <label class="control-label">Audio Comments / Corrective Actions:</label>
                    <div style="white-space: pre-line">@Html.TextAreaFor(m => m.Final_VM.AudioComments, 16, 100, new { @class = "form-control", @style= "padding: 100px; " })</div>
                </div>


            </div>

            <div class="row" style="margin-top:20px;">

                <div class="col-sm-10 form-group">
                    &nbsp;
                </div>

            </div>

            <div class="row" style="margin-top:20px;">
                <div class="col-sm-1 text-right">

                </div>

                <div class="col-sm-10 form-group">

                    <label class="control-label">Video Comment / Corrective Actions:</label>
                    <div style="white-space: pre-line"> @Html.TextAreaFor(m => m.Final_VM.VideoComments, 16, 100, new { @class = "form-control", @style = "padding: 100px; " })</div>
                </div>

            </div>


        </div>


        <div class="bs-callout bs-callout-default">

            <b style="font-size:14px;">Safe Area Check</b>

            <div class="row">

                <div class="col-sm-2 form-group">
                    &nbsp;
                </div>

                <div class="col-sm-5 form-group">
                    <label class="control-label">All Display Formats</label>
                </div>

            </div>



            <div class="row">
                <div class="col-sm-2">

                    <label class="control-label">Opening Titles</label>

                </div>
                <div class="col-sm-3 form-group">
                    <label class="radio-inline">@Html.RadioButtonFor(m => m.Final_VM.OTPercent, "90%")90% Safe</label>
                    <label class="radio-inline">@Html.RadioButtonFor(m => m.Final_VM.OTPercent, "14x9") 14x9 Safe</label>
                    <button type="button" class="btn btn-xs btnReset">Reset</button>
                </div>


            </div>

            <div class="row">
                <div class="col-sm-2">

                    <label class="control-label">Captions</label>

                </div>
                <div class="col-sm-5 form-group">
                    <label class="radio-inline">@Html.RadioButtonFor(m => m.Final_VM.CapPercent, "90%") 90% Safe</label>
                    <label class="radio-inline">@Html.RadioButtonFor(m => m.Final_VM.CapPercent, "14x9") 14x9 Safe</label>
                    <button type="button" class="btn btn-xs btnReset">Reset</button>
                </div>


            </div>

            <div class="row">
                <div class="col-sm-2">

                    <label class="control-label">Closing Titles</label>

                </div>
                <div class="col-sm-5 form-group">
                    <label class="radio-inline">@Html.RadioButtonFor(m => m.Final_VM.CTPercent, "90%")90% Safe</label>
                    <label class="radio-inline">@Html.RadioButtonFor(m => m.Final_VM.CTPercent, "14x9") 14x9 Safe</label>
                    <button type="button" class="btn btn-xs btnReset">Reset</button>
                </div>


            </div>


        </div>

        <div class="bs-callout bs-callout-default" style="display:none;">

            <b style="font-size:14px;">Suitability</b>

            <div class="row">
                <div class="col-sm-2 text-right">

                    <label class="control-label"></label>
                </div>

                <div class="col-sm-2 form-group">

                    <label class="control-label">Yes / No</label>
                </div>
                <div class="col-sm-1">

                </div>
                <div class="col-sm-7 form-group">

                    <label class="control-label">Reason</label>
                </div>
            </div>

            @if (Model.Final_VM.QCType.ToLower() == "b")
                            {
                <div class="row">
                    <div class="col-sm-2 text-right">

                        <label class="control-label">Broadcast</label>
                    </div>

                    <div class="col-sm-2 form-group">

                        @Html.DropDownListFor(m => m.Final_VM.BroadcastSuitable, new SelectList(Model.YesNoList, "key", "value"), "(Please Select)", new { @class = "form-control", maxlength = "50" })
                    </div>
                    <div class="col-sm-1">

                    </div>
                    <div class="col-sm-7 form-group">

                        @Html.TextBoxFor(m => m.Final_VM.BroadcastSuitableReason, new { @class = "form-control" })
                    </div>
                </div>
            }

            <div class="row">
                <div class="col-sm-2 text-right">

                    <label class="control-label">DVD / Blu-Ray</label>
                </div>

                <div class="col-sm-2 form-group">

                    @Html.DropDownListFor(m => m.Final_VM.DVDBluRaySuitable, new SelectList(Model.YesNoList, "key", "value"), "(Please Select)", new { @class = "form-control", maxlength = "50" })
                </div>
                <div class="col-sm-1">

                </div>
                <div class="col-sm-7 form-group">

                    @Html.TextBoxFor(m => m.Final_VM.DVDBluRaySuitableReason, new { @class = "form-control" })
                </div>
            </div>

            <div class="row">
                <div class="col-sm-2 text-right">

                    <label class="control-label">VOD</label>
                </div>
                <div class="col-sm-2 form-group">

                    @Html.DropDownListFor(m => m.Final_VM.VODSuitable, new SelectList(Model.YesNoList, "key", "value"), "(Please Select)", new { @class = "form-control", maxlength = "50" })
                </div>
                <div class="col-sm-1">

                </div>
                <div class="col-sm-7 form-group">

                    @Html.TextBoxFor(m => m.Final_VM.VODSuitableReason, new { @class = "form-control" })
                </div>
            </div>
        </div>
    }

    @*</div>*@





</div>
@*<script type="text/javascript" src="//js.nicedit.com/nicEdit-latest.js"></script>
    <script type="text/javascript">bkLib.onDomLoaded(function () { nicEditors.allTextAreas() });</script>*@

@*<script src="~/Scripts/NicEdit/nicEdit-latest.js" type="text/javascript"></script>
    <script type="text/javascript">bkLib.onDomLoaded(nicEditors.allTextAreas);</script>*@



<script>
    function setActiveButton() {
        $(".subMenuOnClick").removeClass("subMenuOnClick")
        $('#lnkQcFinal').addClass("subMenuOnClick");
    }

    function sendFile(file, id) {
        var lib_url = '/Job/ProcessUploadedImage';
        data = new FormData();
        data.append("file", file);
        $.ajax({
            data: data,
            type: "POST",
            url: lib_url,
            cache: false,
            processData: false,
            contentType: false,
            success: function (url) {
                var image = $('<img>').attr('src', url);
                $('#' + id).summernote("insertNode", image[0]);
            }
        });
    }

    function initializeSummerNote(id) {
        $('#' + id).summernote({
            height: 200,
            //focus: true,
            disableDragAndDrop: true,
            spellCheck: true,
            disableGrammar: false,
            toolbar: [
                // [groupName, [list of button]]
                ['style', ['style']],
                ['style', ['bold', 'italic', 'underline', 'clear']],
                ['fontname', ['fontname']],
                ['font', ['strikethrough', 'superscript', 'subscript']],
                ['fontsize', ['fontsize']],
                ['color', ['color']],
                ['para', ['ul', 'ol', 'paragraph']],
                ['height', ['height']],
                /*['insert', ['picture', 'video', 'table']],*/
                /* ['insert', ['picture']], */
                ['search', ['findnreplace', 'changecolor']],
                ['view', ['help']]
            ],
            callbacks: {
                onImageUpload: function (files, editor, welEditable) {
                    sendFile(files[0],id);
                }
            }


        });

        ////call disable API because of  disableDragAndDrop: true
        //$('#' + id).summernote('disable');


    }


 $(function () {

     $(function () {

         setActiveButton();

         initializeSummerNote('@Html.IdFor(m => m.Final_VM.OverallComments)')
         initializeSummerNote('@Html.IdFor(m => m.Final_VM.VideoComments)')
         initializeSummerNote('@Html.IdFor(m => m.Final_VM.AudioComments)')

         //call disable API because of  disableDragAndDrop: true
         //$('.summernote').summernote('disable');
         @*$('#@Html.IdFor(m => m.Final_VM.OverallComments)').summernote('disable');
         $('#@Html.IdFor(m => m.Final_VM.VideoComments)').summernote('disable');
         $('#@Html.IdFor(m => m.Final_VM.AudioComments)').summernote('disable');*@

        $('#btnSave').on("click", function () {

            //$('.cssload-preloader').fadeIn();
            var myModel = $('#form_jobdetails').serializeObject();

            $.post('/Job/SaveFinalDetails', { model: myModel }).done(function (data) {

                if (data.success == true) {
                    Msg.success(data.msg, 2 * 1000);
                }
                else {
                    Msg.error(data.msg, 5 * 1000);
                }
            })
            .fail(function (xdata) {

                Msg.error('Error occured! <b>Status:</b> ' + xdata.status + ' <b>Error Message:</b> ' + xdata.statusText, 5 * 1000);
            })
            .always(function () {

                $('.cssload-preloader').hide();
            });
        });


        $('.btnReset').on("click", function () {

            $(this).siblings().children('input').prop("checked", false);

        });

        $('#ddlStatus').on("change", function () {

            SetCommentsBoxes($(this).val());
        });


        SetCommentsBoxes($('#ddlStatus').val());
    });

 });

    function SetCommentsBoxes(currentStatus) {

        if (currentStatus == 'PASSED') {

            $('#@Html.IdFor(m => m.Final_VM.AudioComments)').prop("disabled", true);
            $('#@Html.IdFor(m => m.Final_VM.VideoComments)').prop("disabled", true);
        }
        else {

            $('#@Html.IdFor(m => m.Final_VM.AudioComments)').prop("disabled", false);
            $('#@Html.IdFor(m => m.Final_VM.VideoComments)').prop("disabled", false);
        }
    }

</script>