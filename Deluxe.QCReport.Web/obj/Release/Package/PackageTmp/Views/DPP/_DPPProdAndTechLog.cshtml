@model Deluxe.QCReport.Web.Models.HomeVM

<div class="bs-callout bs-callout-warning" id="log">

    <div class="row" style="margin-top:-10px;">
        <div class="col-xs-4">
            <b style="font-size:14px;">@string.Format("{0} - {1}: DPP Log", Model.DPPLog.QCNum, Model.DPPLog.SubQCNum)</b>
        </div>


        @if (Model.SecurityLevel >= 1)
        {

            <div class="col-xs-4">

                <div>
                    <button type="button" class="btn btn-xs btn-primary CRUDButton" id="btnSave">Add</button>
                    <button type="button" class="btn btn-xs btn-danger CRUDButton" id="btnReset" onclick="Reset()">Reset</button>
                    <button type="button" class="btn btn-xs btn-warning CRUDButton" id="btnDeletePrompt" disabled>Delete</button>
                </div>


            </div>
        }
     
    </div>

    @using (Html.BeginForm("SaveLog", "DPP", FormMethod.Post, new { @class = "form-horizontal", @id = "form_jobdetails", @autocomplete = "on" }))
    {
        @Html.HiddenFor(m => m.DPPLog.QCNum)
        @Html.HiddenFor(m => m.DPPLog.SubQCNum)
        @Html.HiddenFor(m => m.DPPLog.Id)


        if (Model.SecurityLevel >= 1)
        {

            <div class="row">

                <div class="col-xs-1 form-group float-left" style="margin-right:20px;">

                    <label class="control-label">TimeCode</label>
                    @Html.TextBoxFor(m => m.DPPLog.TimeCode, new { @class = "form-control timecode", @placeholder = "hh:mm:ss:ff", maxlength = "11", @style = "width:100px" })
                </div>

                <div class="col-xs-4 form-group">
                    <label class="control-label" style="margin-left:5px;">Issue</label>
                    @*@Html.TextBoxFor(m => m.DPPLog.Issue, new { @class = "form-control", maxlength = "100", @style = "width:400px" })*@
                    @Html.TextAreaFor(m => m.DPPLog.Issue, 3, 3, new { @class = "form-control", @title = Model.DPPLog.Issue, @style = "width:400px" })
                </div>

                <div class="col-xs-4 form-group">
                    <label class="control-label" style="margin-left:5px;">Action / Resolution</label>
                    @*@Html.TextBoxFor(m => m.DPPLog.ActionOrResolution, new { @class = "form-control", maxlength = "100", @style = "width:400px" })*@
                    @Html.TextAreaFor(m => m.DPPLog.ActionOrResolution, 3, 3, new { @class = "form-control", @title = Model.DPPLog.ActionOrResolution, @style = "width:400px" })
                </div>

                <div class="col-xs-1 form-group">
                    <label class="control-label" style="margin-left:5px;">Initials</label>
                    @Html.TextBoxFor(m => m.DPPLog.Initials, new { @class = "form-control", maxlength = "30", @style = "width:100px" })
                </div>
            </div>

        }


    }


    <div class="row">
        @if (Model.DPPLog != null && Model.DPPLogs.Any())
        {

        <div class="row">
            <div class="col-xs-4 float-left">
                <div class="btn btn-xs btn-primary">
                    Total Items
                    <span class="badge"> @Model.DPPLogs.Count</span>
                </div>
            </div>
        </div><br/>


            <div id="divscroll" style="height:700px; overflow-y:auto">

                <table class="table table-striped table-condensed">
                    <thead>
                        <tr>
                            <td>Timecode</td>
                            <td>Issue</td>
                            <td>Action / Resolution</td>
                            <td>Initials</td>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.DPPLogs)
                        {

                            <tr class='clickable-row' style="cursor:pointer;" data-tcno="@item.Id">
                                <td class="col-xs-1">@item.TimeCode</td>
                                <td class="col-xs-1">@item.Issue</td>
                                <td class="col-xs-1">@item.ActionOrResolution</td>
                                <td class="col-xs-1">@item.Initials</td>
                            </tr>

                        }
                    </tbody>
                </table>
            </div>
        }


    </div>

</div>


<!-- Modal -->
<div class="modal fade" id="deletePromptModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">

            <div class="modal-body" style="font-size:14px;font-weight:bold;">

            </div>
            <div class="modal-footer">
                <div>
                    <button type="button" class="btn btn-sm btn-default" data-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-sm btn-danger" id="btnDelete">Delete</button>
                </div>
            </div>
        </div>
    </div>
</div>

<script>

    function setActiveButton() {
        $(".subMenuOnClick").removeClass("subMenuOnClick")
        $('#DPPProdAndTechLog').addClass("subMenuOnClick");
    }

    function LoadDPPLogDetails(qcno, revno, tcno) {

        var scrollPosition = $('#divscroll').scrollTop();

        $.get('/DPP/DPPProdAndTechLog', { qcnum: qcno, revnum: revno, id: tcno }).done(function (data) {

            $("#divContent").html(data);

        })
            .fail(function (xdata) {

                Msg.error('Error occured! <b>Status:</b> ' + xdata.status + ' <b>Error Message:</b> ' + xdata.statusText, 5 * 1000);
            })
            .always(function () {

                $('#divscroll').scrollTop(scrollPosition);
            });
    }

    function PopulateDPPLogItemDetails(qcno, revno, tcno) {

        var scrollPosition = $('#divscroll').scrollTop();

        $.get('/DPP/PopulateLogItemDetails', { qcnum: qcno, revnum: revno, id: tcno }).done(function (data) {

            console.log(data)

            $('#@Html.IdFor(m => m.DPPLog.Id)').val(tcno);
            $('#@Html.IdFor(m => m.DPPLog.TimeCode)').val(data.TimeCode);
            $('#@Html.IdFor(m => m.DPPLog.Issue)').val(data.Issue);
            $('#@Html.IdFor(m => m.DPPLog.ActionOrResolution)').val(data.ActionOrResolution);
            $('#@Html.IdFor(m => m.DPPLog.Initials)').val(data.Initials);

            //$('#DPPLog_Id').val(tcno);
            //$('#DPPLog_TimeCode').val(data.TimeCode);
            //$('#DPPLog_Issue').val(data.Issue);
            //$('#DPPLog_ActionOrResolution').val(data.ActionOrResolution);
            //$('#DPPLog_Initials').val(data.Initials);

        })
            .fail(function (xdata) {

                Msg.error('Error occured! <b>Status:</b> ' + xdata.status + ' <b>Error Message:</b> ' + xdata.statusText, 5 * 1000);
            })
            .always(function () {
                $('#divscroll').scrollTop(scrollPosition);

            });
    }


    function SaveLogOnEnterClick() {
        $('#btnSave').click();
    }

    function Reset() {

        $('table tr').removeClass("selectedRow");

            $('#@Html.IdFor(m => m.DPPLog.Id)').val('0');
            $('#@Html.IdFor(m => m.DPPLog.TimeCode)').val('');
            $('#@Html.IdFor(m => m.DPPLog.Issue)').val('');
            $('#@Html.IdFor(m => m.DPPLog.ActionOrResolution)').val('');
            $('#@Html.IdFor(m => m.DPPLog.Initials)').val('');
             //$('#btnDeletePrompt').prop('disabled', true);
            $('#btnSave').text('Add');


    }

     $(function () {

    $(function () {

        setActiveButton();
        $(".timecode").mask("99:99:99:99");

        $('#deletePromptModal').on('shown.bs.modal', function () {
            var issue = $('#@Html.IdFor(m => m.DPPLog.Issue)').val();
            var modal = $(this);
            modal.find('.modal-body').text('Are you sure you want to delete record "' + issue + '"?');
        });

        $('#btnSave').on("click", function () {
        var qcno = '@Model.DPPLog.QCNum';
        var revno = '@Model.DPPLog.SubQCNum';
        var myModel = $('#form_jobdetails').serializeObject();

            $.post('/DPP/SaveLog', { model: myModel}).done(function (data) {

                                if (data.success == true) {
                                    Msg.success(data.msg, 2 * 1000);

                                    LoadDPPLogDetails(qcno, revno, null);
                                }
                                else {
                                    Msg.error(data.msg, 5 * 1000);
                                }
                            })
            .fail(function (xdata) {

                                Msg.error('Error occured! <b>Status:</b> ' + xdata.status + ' <b>Error Message:</b> ' + xdata.statusText, 5 * 1000);
                            })
            .always(function () {

              
                            });
                        });

        $('#btnDeletePrompt').on("click", function () {

            if (  $('#@Html.IdFor(m => m.DPPLog.Id)').val() == '')
            {
                return;
            }

            $('#deletePromptModal').modal('show');

         });

        $('#btnDelete').on("click", function () {

            $('#deletePromptModal').modal('hide');
            var qcno = '@Model.DPPLog.QCNum';
            var revno = '@Model.DPPLog.SubQCNum';
            var myModel = $('#form_jobdetails').serializeObject();

            $.post('/DPP/DeleteLog', { model: myModel }).done(function (data) {

                if (data.success == true) {
                       Msg.success(data.msg, 2 * 1000);
                       LoadDPPLogDetails(qcno, revno, null);
                    }
                    else {
                        Msg.error(data.msg, 5 * 1000);
                    }
                })
            .fail(function (xdata) {

                                Msg.error('Error occured! <b>Status:</b> ' + xdata.status + ' <b>Error Message:</b> ' + xdata.statusText, 5 * 1000);
                            })
            .always(function () {

                $('#deletePromptModal').modal('hide');
                $('body').removeClass('modal-open');
                $('.modal-backdrop').remove();
                            });
                        });



        $('.clickable-row').on('click', function () {


            $('table tr').removeClass("selectedRow");
            $(this).addClass("selectedRow");


            var qcno = '@Model.DPPLog.QCNum';
            var revno = '@Model.DPPLog.SubQCNum';
            var tcno = $(this).data('tcno');

            PopulateDPPLogItemDetails(qcno, revno, tcno);

        });


        if ('@Model.DPPLog.Id' != '') {

            $('#btnDeletePrompt').prop('disabled', false);
            $('#btnSave').text('Save');
        }



        //**************Save new Log item on enter**********************************************

        $('#DPPLog_TimeCode').keyup(function (event) {
           if (event.key == 'Enter') {
               SaveLogOnEnterClick();
            }
        });

        $('#DPPLog_Issue').keyup(function (event) {
            if (event.key == 'Enter') {
                SaveLogOnEnterClick();
            }
        });

        $('#DPPLog_ActionOrResolution').keyup(function (event) {
            if (event.key == 'Enter') {
                SaveLogOnEnterClick();
            }
        });

        $('#DPPLog_Initials').keyup(function (event) {
            if (event.key == 'Enter') {
                SaveLogOnEnterClick();
            }
        });

    });

 });





</script>