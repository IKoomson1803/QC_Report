@model Deluxe.QCReport.Web.Models.HomeVM


@{
    var itemNo = 0;
    var itemCount = Model.Log_VM.QCTimes.Count;
    var nextItemNo = 1;
    var lastItem = Model.Log_VM.QCTimes.OrderByDescending(m => m.ItemNum).FirstOrDefault();
    if (lastItem != null)
    {
        if (lastItem.ItemNum.HasValue)
        {
            nextItemNo = lastItem.ItemNum.Value + 1;
        }
    }

    var sectorCount = Model.ScrtList.Count;
    var itemNumbersCheck = false;

    if (Model.Log_VM.QCTimes != null) // Last item number if it's NULL && !result.QCTimes[result.QCTimes.Count-1].ItemNum.HasValue
    {
        var itemNumbersCount = Model.Log_VM.QCTimes.Where(i => !i.ItemNum.HasValue);

        if (!itemNumbersCount.Any())
        {
            itemNumbersCheck = false;  //true;
        }

    }
}


<div class="bs-callout bs-callout-warning" id="log">

    @using (Html.BeginForm("SaveLogDetails", "Job", FormMethod.Post, new { @class = "form-horizontal", @id = "form_jobdetails", @autocomplete = "on" }))
    {

        @Html.HiddenFor(m => m.Log_VM.Qcnum)
        @Html.HiddenFor(m => m.Log_VM.subQcnum)

        if (Model.Log_VM.CurrentQCTimes != null)
        {
            @Html.HiddenFor(m => m.Log_VM.CurrentQCTimes.TimeID)
        }


        <div class="row" style="margin-top:-10px;">
            <div class="col-xs-4">
                <b style="font-size:14px;">@string.Format("{0} - {1}: Banijay Rights - Faults", Model.Log_VM.Qcnum, Model.Log_VM.subQcnum)</b>
            </div>


            @if (Model.SecurityLevel >= 1)
            {

                <div class="col-xs-4">

                    <div>
                        <button type="button" class="btn btn-xs btn-primary CRUDButton" id="btnSave">Save</button>
                        <button type="button" class="btn btn-xs btn-danger CRUDButton" id="btnReset" onclick="Reset()">Reset</button>
                        <button type="button" class="btn btn-xs btn-warning CRUDButton" id="btnDeletePrompt" disabled>Delete</button>
                    </div>


                </div>
            }

        </div>
        <br />

        <div class="row">
            <div class="col-xs-4 form-group text-right" style="margin-left:5px;">
                <label class="control-label" style="font-weight:bold; font-size:16px">Status:</label>
            </div>

            <div class="col-xs-1 form-group" style="margin-left:5px;">
                @Html.DropDownListFor(m => m.Log_VM.QCStatus,
               new SelectList(Model.QCStatusList, "value", "value", Model.Log_VM.QCStatus), "Please Select",
               new { @class = "form-control status", @style = "width:200px; font-weight:bold !important; font-size:16px !important" })
            </div>

        </div>

        <div class="row" style="font-size:10px;font-weight:bold;margin-top:10px;margin-bottom:10px;">

            <div class="col-sm-11 text-right" style="font-size:11px;margin-left:50px;">
                <span>Severity Grade:&nbsp;&nbsp;</span>
                <span>
                    1=Very Annoying <span>&nbsp;|&nbsp;</span>
                </span>


                <span>
                    2=Annoying <span>&nbsp;|&nbsp;</span>
                </span>


                <span>
                    3=Slightly Annoying <span>&nbsp;|&nbsp;</span>
                </span>


                <span>
                    4=Perceptible but not Annoying <span>&nbsp;|&nbsp;</span>
                </span>


                <span>
                    5=Imperceptible
                </span>

            </div>
            

        </div>

        if (Model.SecurityLevel >= 1)
        {

            <div class="row">

                @*@if (itemNumbersCheck == true)
                    {
                        <div class="col-xs-1 form-group" style="margin-left:1px; ">

                            <label class="control-label">Item:</label>
                            @Html.TextBoxFor(m => m.Log_VM.CurrentQCTimes.ItemNum, new { @class = "form-control", @type = "number", @width = "100px" })
                        </div>

                    }*@

                <div class="col-xs-1 form-group float-left" style="margin-right:20px;">

                    <label class="control-label">T.C.</label>
                    @Html.TextBoxFor(m => m.Log_VM.CurrentQCTimes.TC, new { @class = "form-control timecode", @placeholder = "hh:mm:ss:ff", maxlength = "11", @style = "width:100px" })
                </div>

                <div class="col-xs-1 form-group">

                    <label class="control-label" style="margin-left:5px;">Type</label>
                    @Html.DropDownListFor(m => m.Log_VM.CurrentQCTimes.QCCodename, new SelectList(Model.QCTypeList, "value", "value"), "", new { @class = "form-control", @style = "width:80px" })
                </div>


                @if (itemNumbersCheck == true)
                {
                    <div class="col-xs-5 form-group" style="margin-left:5px;">

                        <label class="control-label">Fault Description </label>
                        @Html.TextBoxFor(m => m.Log_VM.CurrentQCTimes.Note, new { @class = "form-control", maxlength = "750", @autocomplete = "on" })
                        @*@Html.TextAreaFor(m => m.Log_VM.CurrentQCTimes.Note, 3, 3, new { @class = "form-control", maxlength = "750", @autocomplete = "on" })*@
                    </div>

                }
                else
                {
                    <div class="col-xs-6 form-group" style="margin-left:5px;">

                        <label class="control-label">Fault Description </label>
                        @Html.TextBoxFor(m => m.Log_VM.CurrentQCTimes.Note, new { @class = "form-control", maxlength = "750", @autocomplete = "on" })
                        @*@Html.TextAreaFor(m => m.Log_VM.CurrentQCTimes.Note, 3, 3, new { @class = "form-control", maxlength = "750", @autocomplete = "on" })*@
                    </div>
                }

                <div class="col-xs-1 form-group" style="margin-left:5px;">

                    <label class="control-label">Grade</label>

                    @if (Model.QCType == "E")
                    {
                        <select id="Log_VM_CurrentQCTimes_QCGrade" name="Log_VM.CurrentQCTimes.QCGrade" class="form-control">
                            <option></option>
                            <option value="1">1</option>
                            <option value="3">3</option>
                            <option value="5">5</option>
                        </select>
                    }
                    else
                    {
                        @Html.DropDownListFor(m => m.Log_VM.CurrentQCTimes.QCGrade, new SelectList(Model.FinalGradesList, "key", "value"), new { @class = "form-control" })

                    }

                </div>

                <div class="col-xs-1 form-group" style="margin-left:5px;">
                    <label class="control-label">Duration</label>
                    @Html.TextBoxFor(m => m.Log_VM.CurrentQCTimes.Duration, new { @class = "form-control", maxlength = "16", @style = "width:100px" })
                </div>

                <div class="col-xs-1 form-group" style="width:120px; margin-left:20px;">
                    <label class="control-label">
                        Sector(s)
                        &nbsp; <span id="ClearSectors" onclick="clearSectors()" class="glyphicon glyphicon-remove-circle" style="color:red;cursor:pointer;" title="Clear sector(s)"></span>
                    </label>

                    @Html.DropDownListFor(m => m.Log_VM.CurrentQCTimes.Action,
                   new SelectList(Model.ScrtList, "value", "value"), "",
                   new { @style = "width:80px" })   @*new { @class = "form-control" }*@    @*SearchableDropdown_4 @multiple = "multiple"*@
            </div>

            <div class="col-xs-1 form-group text-left">
                <label class="control-label">Signed Off</label>
                @Html.CheckBoxFor(m => m.Log_VM.CurrentQCTimes.InMaster, new { @class = "checkbox" })
            </div>

        </div>

    }


    <div class="row">
        @if (Model.Log_VM != null && Model.Log_VM.QCTimes != null && Model.Log_VM.QCTimes.Any())
        {
            <div class="row">
                <div class="col-xs-4 float-left">

                    <div class="btn btn-xs btn-primary">
                        Total Items
                        <span class="badge"> @itemCount</span>
                    </div>
                </div>
            </div>
            <br />
            <div id="divscroll" style="height:700px; overflow-y:auto">

                <table class="table table-striped table-condensed">
                    <thead>
                        <tr>
                            <td>T.C.</td>
                            <td>Type</td>
                            <td>Fault Description</td>
                            <td>Grade</td>
                            <td>Duration</td>
                            <td>Sector</td>
                            <td>Signed Off</td>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.Log_VM.QCTimes)
                        {
                            itemNo++;

                            <tr class='clickable-row' style="cursor:pointer;" data-tcno="@item.TimeID">

                                <td class="col-xs-1">@item.TC</td>

                                @if (string.IsNullOrWhiteSpace(item.QCCodename) && !string.IsNullOrWhiteSpace(item.QCCode))
                                {
                                    if (item.QCCode == "A")
                                    {
                                        <td class="col-xs-1">Audio</td>
                                    }
                                    else if (item.QCCode == "F")
                                    {
                                        <td class="col-xs-1">Film</td>
                                    }
                                    else if (item.QCCode == "V")
                                    {
                                        <td class="col-xs-1">Video</td>
                                    }

                                }
                                else
                                {
                                    <td class="col-xs-1">@item.QCCodename</td>
                                }

                                @if (itemNumbersCheck == true)
                                {
                                    <td class="col-xs-5">@item.Note</td>

                                }
                                else
                                {
                                    <td class="col-xs-6">@item.Note</td>
                                }

                                <td class="col-xs-1">@item.QCGrade</td>
                                <td class="col-xs-1">@item.Duration</td>
                                @if (string.IsNullOrWhiteSpace(item.ActionsForDisplay))
                                {
                                    <td class="col-xs-1">@item.Action</td>
                                }
                                else
                                {
                                    <td class="col-xs-1"><span style="white-space: pre-line">@item.ActionsForDisplay</span></td>
                                }
                                <td class="col-xs-1">

                                    @if (item.InMaster == true)
                                    {
                                        <span>Yes</span>
                                    }
                                    else
                                    {
                                        <span></span>
                                    }
                                </td>
                            </tr>

                        }
                    </tbody>
                </table>
            </div>

            <br />

            <div class="row">
                <div class="col-xs-1 form-group text-right" style="margin-left:5px;">
                    <label class="control-label">Status:</label>
                </div>

                <div class="col-xs-1 form-group" style="margin-left:5px;">
                    @Html.DropDownListFor(m => m.Log_VM.QCStatus,
                   new SelectList(Model.QCStatusList, "value", "value", Model.Log_VM.QCStatus), "Please Select",
                   new { @class = "form-control status", @style = "width:150px" })
                </div>

            </div>
        }


    </div>

}

</div>


<!-- Modal -->
<div class="modal fade" id="deletePromptModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">

            <div class="modal-body" style="font-size:14px;font-weight:bold;">

            </div>
            <div class="modal-footer">
                <div>
                    <button type="button" class="btn btn-sm btn-default" data-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-sm btn-danger" id="btnDelete">Delete</button>
                </div>
            </div>
        </div>
    </div>
</div>


<script>

    function setActiveButton() {
        $(".subMenuOnClick").removeClass("subMenuOnClick")
        $('#lnkBNJRFaults').addClass("subMenuOnClick");
    }

    function clearSectors() {
        if ($("#Log_VM_CurrentQCTimes_Action").val() != '') {
            $("#Log_VM_CurrentQCTimes_Action")[0].selectize.clear();
        }

    }

    $(function () {

    $(function () {

        setActiveButton();
        $('#@Html.IdFor(m => m.Log_VM.CurrentQCTimes.ItemNum)').val(@nextItemNo);
                $("#Log_VM_CurrentQCTimes_Action").selectize({
            maxItems: @sectorCount,
            plugins: ['remove_button']
        });


               $(".timecode").mask("99:99:99:99");

              var securityLevel = @Model.SecurityLevel

                 $(".status").blur(function () {

                    // alert(securityLevel)

                    if (securityLevel >= 1)
                    {
                        saveQCStatus();
                    }

                });




        $('#btnSave').on("click", function () {

            var mySectors = '';
            var aSectors = $('#Log_VM_CurrentQCTimes_Action').val();

                //Build '/' delimited string
                $.each(aSectors, function (index, sector) {
                    mySectors += sector + ' / '
                });



                var qcno = '@Model.Log_VM.Qcnum';
                var revno = '@Model.Log_VM.subQcnum';
                var myModel = $('#form_jobdetails').serializeObject();


            $.post('/BanijayRights/SaveLogDetails', { model: myModel, sectors: mySectors }).done(function (data) {

                                if (data.success == true) {
                                    Msg.success(data.msg, 2 * 1000);

                                    LoadLogDetails(qcno, revno, null);
                                }
                                else {
                                    Msg.error(data.msg, 5 * 1000);
                                }
                            })
            .fail(function (xdata) {

                                Msg.error('Error occured! <b>Status:</b> ' + xdata.status + ' <b>Error Message:</b> ' + xdata.statusText, 5 * 1000);
                            })
            .always(function () {


                            });
        });


        $('#deletePromptModal').on('shown.bs.modal', function () {

                            var itemInfo = $('#@Html.IdFor(m => m.Log_VM.CurrentQCTimes.Note)').val();
                            var modal = $(this);
                            modal.find('.modal-body').text('Are you sure you want to delete record "' + itemInfo + '"?');

                        });

        $('#btnDeletePrompt').on("click", function () {

            if (  $('#@Html.IdFor(m => m.Log_VM.CurrentQCTimes.TimeID)').val() == '')
            {
                return;
            }

            $('#deletePromptModal').modal('show');

         });

        $('#btnDelete').on("click", function () {

            $('#deletePromptModal').modal('hide');

            var qcno = '@Model.Log_VM.Qcnum';
            var revno = '@Model.Log_VM.subQcnum';
            var myModel = $('#form_jobdetails').serializeObject();



            $.post('/BanijayRights/DeleteLogDetails', { model: myModel }).done(function (data) {

                if (data.success == true) {
                    Msg.success(data.msg, 2 * 1000);
                    LoadLogDetails(qcno, revno, null);
                }
                else {
                    Msg.error(data.msg, 5 * 1000);
                }
            })
            .fail(function (xdata) {

                                Msg.error('Error occured! <b>Status:</b> ' + xdata.status + ' <b>Error Message:</b> ' + xdata.statusText, 5 * 1000);
                            })
            .always(function () {

                //$('.cssload-preloader').hide();

                $('#deletePromptModal').modal('hide');
                $('body').removeClass('modal-open');
                $('.modal-backdrop').remove();
                            });
                        });


        $('.clickable-row').on('click', function () {

            $('table tr').removeClass("selectedRow");
            $(this).addClass("selectedRow");
            var qcno = '@Model.Log_VM.Qcnum';
            var revno = '@Model.Log_VM.subQcnum';
            var tcno = $(this).data('tcno');
            $('#btnDeletePrompt').prop('disabled', false);
            $('#btnSave').text('Update');
            PopulateLogItemDetails(qcno, revno, tcno);

        });



        //**************Save new Log item on enter**********************************************

        $('#Log_VM_CurrentQCTimes_TC').keyup(function (event) {
           if (event.key == 'Enter') {
               SaveLogOnEnterClick();
            }
        });

        $('#Log_VM_CurrentQCTimes_QCCode').keyup(function (event) {
            if (event.key == 'Enter') {
                SaveLogOnEnterClick();
            }
        });

        $('#Log_VM_CurrentQCTimes_Note').keyup(function (event) {
            if (event.key == 'Enter') {
                SaveLogOnEnterClick();
            }
        });

        $('#Log_VM_CurrentQCTimes_QCGrade').keyup(function (event) {
            if (event.key == 'Enter') {
                SaveLogOnEnterClick();
            }
        });

        $('#Log_VM_CurrentQCTimes_Action').keyup(function (event) {
            if (event.key == 'Enter') {
                SaveLogOnEnterClick();
            }
        });

        $('#Log_VM_CurrentQCTimes_Duration').keyup(function (event) {
            if (event.key == 'Enter') {
                SaveLogOnEnterClick();
            }
        });

        $('#Log_VM_CurrentQCTimes_InMaster').keyup(function (event) {
            if (event.key == 'Enter') {
                SaveLogOnEnterClick();
            }
        });

    });

    });

    function saveQCStatus() {

         if ($('#@Html.IdFor(m => m.Log_VM.QCStatus)').val() == '' ) {
                 return;
              }

        var myModel = $('#form_jobdetails').serializeObject();

        $.post('/BanijayRights/SaveFaultsStatus', { model: myModel }).done(function (data) {

            if (data.success == true) {

                // Msg.success(data.msg, 2 * 1000);
            }
            else {
               // Msg.error(data.msg, 5 * 1000);
            }
        })
            .fail(function (xdata) {

                /// Msg.error('Error occured! <b>Status:</b> ' + xdata.status + ' <b>Error Message:</b> ' + xdata.statusText, 5 * 1000);
            })
            .always(function () {


            });
    }


    function SaveLogOnEnterClick() {

        $('#btnSave').click();

    }

    function Reset() {

        $('table tr').removeClass("selectedRow");

            $('#@Html.IdFor(m => m.Log_VM.CurrentQCTimes.TimeID)').val('');
            $('#@Html.IdFor(m => m.Log_VM.CurrentQCTimes.TC)').val('');
            $('#@Html.IdFor(m => m.Log_VM.CurrentQCTimes.QCCode)').val('');
            $('#@Html.IdFor(m => m.Log_VM.CurrentQCTimes.QCCodename)').val('');
            $('#@Html.IdFor(m => m.Log_VM.CurrentQCTimes.Note)').val('');
            $('#@Html.IdFor(m => m.Log_VM.CurrentQCTimes.QCGrade)').val('');
            $('#@Html.IdFor(m => m.Log_VM.CurrentQCTimes.Action)').val('');
            $('#@Html.IdFor(m => m.Log_VM.CurrentQCTimes.Duration)').val('');
            $('#@Html.IdFor(m => m.Log_VM.CurrentQCTimes.InMaster)').prop("checked", false);
           $('#@Html.IdFor(m => m.Log_VM.CurrentQCTimes.ItemNum)').val(@nextItemNo);


            $('#btnDeletePrompt').prop('disabled', true);
            $('#btnSave').text('Save');


    }


    function LoadLogDetails(qcno, revno, tcno) {

        var scrollPosition = $('#divscroll').scrollTop();

        $.post('/BanijayRights/LogDetails', { qcnum: qcno, revnum: revno, timeid: tcno }).done(function (data) {

            $("#divContent").html(data);
            Reset();

        })
        .fail(function (xdata) {

            Msg.error('Error occured! <b>Status:</b> ' + xdata.status + ' <b>Error Message:</b> ' + xdata.statusText, 5 * 1000);
        })
        .always(function () {

            $('#divscroll').scrollTop(scrollPosition);
        });
    }

    function PopulateLogItemDetails(qcno, revno, tcno) {

        var scrollPosition = $('#divscroll').scrollTop();

        $.post('/BanijayRights/PopulateLogItemDetails', { qcnum: qcno, revnum: revno, timeid: tcno }).done(function (data) {

            console.log(data)

            $('#Log_VM_CurrentQCTimes_TimeID').val(tcno);
            $('#Log_VM_CurrentQCTimes_TC').val(data.TC);
            $('#Log_VM_CurrentQCTimes_QCCode').val(data.QCCode);

            var qcCode = data.QCCode;

            if (qcCode != '') {

                if (qcCode == 'A') {
                    $('#Log_VM_CurrentQCTimes_QCCodename').val('Audio');
                }
                else if (qcCode == 'F') {
                    $('#Log_VM_CurrentQCTimes_QCCodename').val('Film');
                }
                else if (qcCode == 'V') {
                    $('#Log_VM_CurrentQCTimes_QCCodename').val('Video');
                }
            }
            else {
                $('#Log_VM_CurrentQCTimes_QCCodename').val(data.QCCodename);
            }

            $('#Log_VM_CurrentQCTimes_Note').val(data.Note);
            $('#Log_VM_CurrentQCTimes_QCGrade').val(data.QCGrade);

            var sectors = data.Action

            console.log(sectors);

            if (sectors != '') {
                $('#Log_VM_CurrentQCTimes_Action')[0].selectize.setValue(sectors.split(','), true)

            }
            else {
                $("#Log_VM_CurrentQCTimes_Action")[0].selectize.clear();
            }

           // $('#Log_VM_CurrentQCTimes_Duration').val(data.Action);
            $('#Log_VM_CurrentQCTimes_Duration').val(data.Duration);
            $('#Log_VM_CurrentQCTimes_InMaster').prop('checked', data.InMaster);
            $('#Log_VM_CurrentQCTimes_ItemNum').val(data.ItemNum);


        })
            .fail(function (xdata) {

                Msg.error('Error occured! <b>Status:</b> ' + xdata.status + ' <b>Error Message:</b> ' + xdata.statusText, 5 * 1000);
            })
            .always(function () {
                $('#divscroll').scrollTop(scrollPosition);

            });
    }

</script>
